<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.biosh.e3mall.dal.mapper.TbOrderShippingMapper">
  <resultMap id="BaseResultMap" type="cn.biosh.e3mall.dal.model.TbOrderShipping">
    <id column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="receiver_name" jdbcType="VARCHAR" property="receiverName" />
    <result column="receiver_phone" jdbcType="VARCHAR" property="receiverPhone" />
    <result column="receiver_mobile" jdbcType="VARCHAR" property="receiverMobile" />
    <result column="receiver_state" jdbcType="VARCHAR" property="receiverState" />
    <result column="receiver_city" jdbcType="VARCHAR" property="receiverCity" />
    <result column="receiver_district" jdbcType="VARCHAR" property="receiverDistrict" />
    <result column="receiver_address" jdbcType="VARCHAR" property="receiverAddress" />
    <result column="receiver_zip" jdbcType="VARCHAR" property="receiverZip" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="updated" jdbcType="TIMESTAMP" property="updated" />
  </resultMap>
  <sql id="Base_Column_List">
    order_id, receiver_name, receiver_phone, receiver_mobile, receiver_state, receiver_city, 
    receiver_district, receiver_address, receiver_zip, created, updated
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_order_shipping
    where order_id = #{orderId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_order_shipping
    where order_id = #{orderId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.biosh.e3mall.dal.model.TbOrderShipping">
    insert into tb_order_shipping (order_id, receiver_name, receiver_phone, 
      receiver_mobile, receiver_state, receiver_city, 
      receiver_district, receiver_address, receiver_zip, 
      created, updated)
    values (#{orderId,jdbcType=VARCHAR}, #{receiverName,jdbcType=VARCHAR}, #{receiverPhone,jdbcType=VARCHAR}, 
      #{receiverMobile,jdbcType=VARCHAR}, #{receiverState,jdbcType=VARCHAR}, #{receiverCity,jdbcType=VARCHAR}, 
      #{receiverDistrict,jdbcType=VARCHAR}, #{receiverAddress,jdbcType=VARCHAR}, #{receiverZip,jdbcType=VARCHAR}, 
      #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.biosh.e3mall.dal.model.TbOrderShipping">
    insert into tb_order_shipping
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="receiverName != null">
        receiver_name,
      </if>
      <if test="receiverPhone != null">
        receiver_phone,
      </if>
      <if test="receiverMobile != null">
        receiver_mobile,
      </if>
      <if test="receiverState != null">
        receiver_state,
      </if>
      <if test="receiverCity != null">
        receiver_city,
      </if>
      <if test="receiverDistrict != null">
        receiver_district,
      </if>
      <if test="receiverAddress != null">
        receiver_address,
      </if>
      <if test="receiverZip != null">
        receiver_zip,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="receiverName != null">
        #{receiverName,jdbcType=VARCHAR},
      </if>
      <if test="receiverPhone != null">
        #{receiverPhone,jdbcType=VARCHAR},
      </if>
      <if test="receiverMobile != null">
        #{receiverMobile,jdbcType=VARCHAR},
      </if>
      <if test="receiverState != null">
        #{receiverState,jdbcType=VARCHAR},
      </if>
      <if test="receiverCity != null">
        #{receiverCity,jdbcType=VARCHAR},
      </if>
      <if test="receiverDistrict != null">
        #{receiverDistrict,jdbcType=VARCHAR},
      </if>
      <if test="receiverAddress != null">
        #{receiverAddress,jdbcType=VARCHAR},
      </if>
      <if test="receiverZip != null">
        #{receiverZip,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.biosh.e3mall.dal.model.TbOrderShipping">
    update tb_order_shipping
    <set>
      <if test="receiverName != null">
        receiver_name = #{receiverName,jdbcType=VARCHAR},
      </if>
      <if test="receiverPhone != null">
        receiver_phone = #{receiverPhone,jdbcType=VARCHAR},
      </if>
      <if test="receiverMobile != null">
        receiver_mobile = #{receiverMobile,jdbcType=VARCHAR},
      </if>
      <if test="receiverState != null">
        receiver_state = #{receiverState,jdbcType=VARCHAR},
      </if>
      <if test="receiverCity != null">
        receiver_city = #{receiverCity,jdbcType=VARCHAR},
      </if>
      <if test="receiverDistrict != null">
        receiver_district = #{receiverDistrict,jdbcType=VARCHAR},
      </if>
      <if test="receiverAddress != null">
        receiver_address = #{receiverAddress,jdbcType=VARCHAR},
      </if>
      <if test="receiverZip != null">
        receiver_zip = #{receiverZip,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.biosh.e3mall.dal.model.TbOrderShipping">
    update tb_order_shipping
    set receiver_name = #{receiverName,jdbcType=VARCHAR},
      receiver_phone = #{receiverPhone,jdbcType=VARCHAR},
      receiver_mobile = #{receiverMobile,jdbcType=VARCHAR},
      receiver_state = #{receiverState,jdbcType=VARCHAR},
      receiver_city = #{receiverCity,jdbcType=VARCHAR},
      receiver_district = #{receiverDistrict,jdbcType=VARCHAR},
      receiver_address = #{receiverAddress,jdbcType=VARCHAR},
      receiver_zip = #{receiverZip,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP}
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
  <!--多条件查询-->
  <select id="getByConditions" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"></include>
    from
    tb_order_shipping
    <where>
      <choose>
        <when test="map.conditions != null and map.conditions.size()>0">
          <foreach collection="map.conditions" separator="," close="" open="" item="item">
            <choose>
              <when test="item.operate != 'in' or item.operate != 'IN'">
                ${item.key} ${item.operate} #{item.value}
              </when>
              <otherwise>
                ${item.key} ${item.operate} ${item.value}
              </otherwise>
            </choose>
          </foreach>
        </when>
      </choose>
    </where>
    <choose>
      <when test="map.sorters != null and map.sorters.size()>0 ">
        <foreach collection="map.sorters" item="item" open="order by" close="" separator=",">
          ${item.column} ${item.downUp}
        </foreach>
      </when>
    </choose>
    <choose>
      <when test="map.otherOperate != null">
        ${map.otherOperate}
      </when>
    </choose>
  </select>
</mapper>